set -g default-command $SHELL
set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:Tc"
set -g focus-events on
set -g detach-on-destroy off

set -g prefix C-t

set -g mouse on
set -s escape-time 0

set -g history-limit 3000

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind -r h resize-pane -L 3
# bind -r j resize-pane -D 3
# bind -r k resize-pane -U 3
# bind -r l resize-pane -R 3

bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
bind x kill-pane

# set -g allow-passthrough on
# set -ga update-environment TERM
# set -ga update-environment TERM_PROGRAM

bind '"' split-window -h -c "#{pane_current_path}"
bind % split-window -c "#{pane_current_path}"
bind X kill-session
bind C-t last-window
bind N switch-client -n
bind P switch-client -p
bind -T pops p if-shell -F '#{==:#{session_name},popup}' {
    detach-client
} {
    if-shell '! tmux has-session -t popup 2>/dev/null' {
        new-session -d -s popup -c '#{pane_current_path}'
        set -t popup detach-on-destroy on
        set -t popup status off
    }
    display-popup -x 100% -y 0% -w 70% -h 70% -E "tmux attach-session -t popup"
}

bind -T pops t display-popup -w 90% -h 90% -E "etodo"
bind -T pops u if-shell "ps -t #{pane_tty} -o comm | rg -q $EDITOR" {
    display-popup -w 90% -h 90% -E "
        paths=\$(yazi_open);
        if [ -n \"\$paths\" ]; then
            tmux send-keys \" :args \$paths\" C-m
        fi
        "
} {
    display-popup -w 90% -h 90% -E "
        paths=\$(yazi_open);
        if [ -n \"\$paths\" ]; then
            tmux send-keys \"e \$paths\" C-m
        fi
        "
}
bind -T pops c display-popup -w 50% -h 50% -E "capture"
bind -T pops o display-popup -w 80% -h 80% -E "eenotes"
bind -T pops e display-popup -w 80% -h 80% -E "ses --popup"
bind -T pops g display-popup -w 80% -h 80% -d '#{pane_current_path}' -E "lg"
bind g switch-client -T pops

set -g status-interval 1
set -g base-index 1
set -g popup-border-lines "rounded"

set -g @FG "color6"
set -g @FG_CUR "color0"
set -g @ACTIVE "color4"
set -g @BG default
set -g status-style bg="#{@BG}"
set -g window-status-current-format "#[fg=#{@FG_CUR}]#[bg=#{@FG}] #I "
set -g window-status-format "#[fg=#{@FG}]#[bg=#{@BG}] #I "
set -g status-left '#[bg=#{@BG}]#[FG=#{@FG}]#{?client_prefix,#[bg=#{@ACTIVE}]#[FG=#{@FG_CUR}],} âœ¼ '
set -g status-right '#[bg=#{@BG}]#[FG=#{@FG}] #S '

set -g message-style fg="#{@FG}",bg="#{@BG}"

set -g pane-border-style fg=colour235 #base02
set -g pane-active-border-style fg=colour240 #base01

set -g display-panes-active-colour colour33 #blue
set -g display-panes-colour colour166 #orange
